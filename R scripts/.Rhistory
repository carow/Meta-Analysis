<<<<<<< HEAD
lines(newage, plogis(preds$fit-1.96*preds$se.fit), col="red", lty=4, lwd=2)
lines(newage, plogis(preds$fit+1.96*preds$se.fit), col="red", lty=4, lwd=2)
legend(plot)
plot(OurDataFrame$NDonation ~ OurDataFrame$PedestrianAge, ylim=c(0,0.03), xlab = "Age group", ylab = "Donation probability", legend = T)
legend(1, plot)
plot(OurDataFrame$NDonation ~ OurDataFrame$PedestrianAge, ylim=c(0,0.03), xlab = "Age group", ylab = "Donation probability", legend = T)
newage <- seq(min(OurDataFrame$PedestrianAge, na.rm=T), max(OurDataFrame$PedestrianAge, na.rm=T))
preds <- predict(fmt, newdata=data.frame("PedestrianAge"=newage), se.fit=T)
lines(newage, plogis(preds$fit), col="black", lwd=3)
lines(newage, plogis(preds$fit-1.96*preds$se.fit), col="red", lty=4, lwd=2)
lines(newage, plogis(preds$fit+1.96*preds$se.fit), col="blue", lty=4, lwd=2)
legend(1, plot)
legend(1, fmt)
legend(1,)
legend()
legend(legend)
OurDataFrame = read.csv("/Users/Torfinn/Documents/Fornybar Energi/Research skills/Group Work/BeggarDataset.csv", sep = ";")
BeggarDataset <- read.csv("~/Dropbox/Group Work/BeggarDataset.csv", sep=";")
View(BeggarDataset)
OurDataFrame = BeggarDataset
OurDataFrame$Donation=as.logical(OurDataFrame$Donation)
OurDataFrame$Dog=as.logical(OurDataFrame$Dog)
OurDataFrame$PedestrianAge = as.numeric(OurDataFrame$PedestrianAge)
OurDataFrame$BeggarAge = as.numeric(OurDataFrame$BeggarAge)
OurDataFrame$BeggarID = as.factor(OurDataFrame$BeggarID)
OurDataFrame$NDonation = as.numeric(OurDataFrame$Donation)
OurDataFrame$SQPedestrianAge = as.numeric(I(OurDataFrame$PedestrianAge^2))
FDonation = as.factor(OurDataFrame$NDonation)
OurDataFrame$NDog = as.numeric(OurDataFrame$Dog)
OurDataFrame$IObserverID = as.integer(OurDataFrame$ObserverID)
str(OurDataFrame)
PedestrianAge = OurDataFrame$PedestrianAge
PedestrianGender = OurDataFrame$PedestrianGender
OurDataFrame$FPedestrianAge= as.factor(OurDataFrame$PedestrianAge)
plot(age)
plot(OurDataFrame$PedestrianGender)
plot(OurDataFrame$BeggarID, OurDataFrame$BeggarAge)
plot(OurDataFrame$BeggarID, OurDataFrame$Dog)
plot(OurDataFrame$FPedestrianAge)
plot(OurDataFrame$PedestrianGender)
plot(OurDataFrame$BeggarID, OurDataFrame$BeggarAge)
plot(OurDataFrame$BeggarID, OurDataFrame$Dog)
#If the packages below er not installed, remove the # of the following commands to install:
# install.packages("vcd")
# install.packages("effects")
# install.packages("car")
library(vcd)
library(effects)
library(car)
mosaic(~ PedestrianGender + PedestrianAge + Donation, shade=F, legend=TRUE, data = OurDataFrame)
mosaic(~ TOD + PedestrianAge + PedestrianGender + NDonation, shade=F, legend=TRUE, data = OurDataFrame)
mosaic(~ PedestrianAge + ObserverID + PedestrianGender, shade=F, legend=TRUE, data = OurDataFrame)
fmt <- glm(FPedestrianAge ~ ObserverID + TOD,  family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
fmt <- glm(PedestrianGender ~ ObserverID,  family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
mosaic(~ PedestrianGender + PedestrianAge + Donation, shade=F, legend=TRUE, data = OurDataFrame)
mosaic(~ TOD + PedestrianAge + PedestrianGender + NDonation, shade=F, legend=TRUE, data = OurDataFrame)
mosaic(~ PedestrianAge + ObserverID + PedestrianGender, shade=F, legend=TRUE, data = OurDataFrame)
fmt <- glm(FPedestrianAge ~ ObserverID + TOD,  family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
fmt <- glm(PedestrianGender ~ ObserverID,  family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
#This is our main glm model with age and gender as predictors
fmt <- glm(NDonation ~ PedestrianGender + PedestrianAge,  family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
fmt <- glm(NDonation ~ PedestrianGender + PedestrianAge + I(PedestrianAge^2) , family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
plot(fmt)
fmt <- glm(NDonation ~ PedestrianGender + as.factor(PedestrianAge), family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
fmt <- glm(NDonation ~ PedestrianGender + as.factor(PedestrianAge), family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
#The following are more experimental models
fmt <- glm(NDonation ~ NDog, family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
fmt <- glm(NDonation ~ PedestrianGender, family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
fmt <- glm(NDonation ~ PedestrianAge, family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
fmt <- glm(NDonation ~ TOD, family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
attach(OurDataFrame)
plot(NDonation ~ I(PedestrianAge^2))
detach(OurDataFrame)
fmt <- glm(NDonation ~ PedestrianAge, family=binomial,  data = OurDataFrame)
summary(fmt)
plot(OurDataFrame$NDonation ~ OurDataFrame$PedestrianAge, main="Age and generosity", ylim=c(0, 0.1))
newage <- seq(min(OurDataFrame$PedestrianAge, na.rm=T), max(OurDataFrame$PedestrianAge, na.rm=T))
preds <- predict(fmt, newdata=data.frame("PedestrianAge"=newage), se.fit=T)
SQnewage <- seq(min(OurDataFrame$SQPedestrianAge, na.rm=T), max(OurDataFrame$SQPedestrianAge, na.rm=T))
lines(newage, plogis(preds$fit), col="purple", lwd=3)
lines(newage, plogis(preds$fit-2*preds$se.fit), col="purple", lty=4, lwd=2)
lines(newage, plogis(preds$fit+2*preds$se.fit), col="purple", lty=4, lwd=2)
fmt <- glm(NDonation ~ PedestrianAge, family=binomial,  data = OurDataFrame)
summary(fmt)
plot(OurDataFrame$NDonation ~ OurDataFrame$PedestrianAge, main="Age and generosity", ylim=c(0, 0.1))
newage <- seq(min(OurDataFrame$PedestrianAge, na.rm=T), max(OurDataFrame$PedestrianAge, na.rm=T))
preds <- predict(fmt, newdata=data.frame("PedestrianAge"=newage), se.fit=T)
SQnewage <- seq(min(OurDataFrame$SQPedestrianAge, na.rm=T), max(OurDataFrame$SQPedestrianAge, na.rm=T))
lines(newage, plogis(preds$fit), col="purple", lwd=3)
lines(newage, plogis(preds$fit-2*preds$se.fit), col="purple", lty=4, lwd=2)
lines(newage, plogis(preds$fit+2*preds$se.fit), col="purple", lty=4, lwd=2)
fmt <- glm(NDonation ~ PedestrianAge + I(PedestrianAge^2), family=binomial,  data = OurDataFrame)
summary(fmt)
plot(OurDataFrame$NDonation ~ OurDataFrame$PedestrianAge, ylim=c(0,0.03), xlab = "Age group", ylab = "Donation probability", legend = T)
newage <- seq(min(OurDataFrame$PedestrianAge, na.rm=T), max(OurDataFrame$PedestrianAge, na.rm=T))
preds <- predict(fmt, newdata=data.frame("PedestrianAge"=newage), se.fit=T)
lines(newage, plogis(preds$fit), col="black", lwd=3)
lines(newage, plogis(preds$fit-1.96*preds$se.fit), col="red", lty=4, lwd=2)
lines(newage, plogis(preds$fit+1.96*preds$se.fit), col="red", lty=4, lwd=2)
barplot(plogis(preds$fit), ylim=c(0, 0.03), )
points( plogis(preds$fit-1.96*preds$se.fit), col="purple", lty=4, lwd=2)
points( plogis(preds$fit+1.96*preds$se.fit), col="purple", lty=4, lwd=2)
fmt <- glm(NDonation ~ SQPedestrianAge, family=binomial,  data = OurDataFrame)
summary(fmt)
plot(OurDataFrame$NDonation ~ OurDataFrame$SQPedestrianAge, main="Age and generosity", ylim=c(0, 0.1))
newage <- seq(min(OurDataFrame$SQPedestrianAge, na.rm=T), max(OurDataFrame$SQPedestrianAge, na.rm=T))
preds <- predict(fmt, newdata=data.frame("SQPedestrianAge"=newage), se.fit=T)
lines(newage, plogis(preds$fit), col="purple", lwd=3)
lines(newage, plogis(preds$fit-2*preds$se.fit), col="purple", lty=4, lwd=2)
lines(newage, plogis(preds$fit+2*preds$se.fit), col="purple", lty=4, lwd=2)
fmt <- glm(NDonation ~ PedestrianAge + I(PedestrianAge^2), family=binomial,  data = OurDataFrame)
summary(fmt)
plot(OurDataFrame$NDonation ~ OurDataFrame$PedestrianAge, ylim=c(0,0.03), xlab = "Age group", ylab = "Donation probability", legend = T)
newage <- seq(min(OurDataFrame$PedestrianAge, na.rm=T), max(OurDataFrame$PedestrianAge, na.rm=T))
preds <- predict(fmt, newdata=data.frame("PedestrianAge"=newage), se.fit=T)
lines(newage, plogis(preds$fit), col="black", lwd=3)
lines(newage, plogis(preds$fit-1.96*preds$se.fit), col="red", lty=4, lwd=2)
lines(newage, plogis(preds$fit+1.96*preds$se.fit), col="red", lty=4, lwd=2)
fmt <- glm(NDonation ~ PedestrianAge + I(PedestrianAge^2), family=binomial,  data = OurDataFrame)
summary(fmt)
plot(OurDataFrame$NDonation ~ OurDataFrame$PedestrianAge, ylim=c(0,0.03), xlab = "Age group", ylab = "Donation probability", legend = F)
newage <- seq(min(OurDataFrame$PedestrianAge, na.rm=T), max(OurDataFrame$PedestrianAge, na.rm=T))
preds <- predict(fmt, newdata=data.frame("PedestrianAge"=newage), se.fit=T)
lines(newage, plogis(preds$fit), col="black", lwd=3)
lines(newage, plogis(preds$fit-1.96*preds$se.fit), col="red", lty=4, lwd=2)
lines(newage, plogis(preds$fit+1.96*preds$se.fit), col="red", lty=4, lwd=2)
plogis(-5.7527 + 0.3739)
plogis(-5.7527 + (2*0.3739))
plogis(-5.7527 + (3*0.3739))
plogis(-5.7527 + (4*0.3739))
fmt <- glm(NDonation ~ PedestrianAge + I(PedestrianAge^2), family=binomial,  data = OurDataFrame)
summary(fmt)
plot(OurDataFrame$NDonation ~ OurDataFrame$PedestrianAge, ylim=c(0,0.03), xlab = "Age group", ylab = "Donation probability", legend = F)
newage <- seq(min(OurDataFrame$PedestrianAge, na.rm=T), max(OurDataFrame$PedestrianAge, na.rm=T))
preds <- predict(fmt, newdata=data.frame("PedestrianAge"=newage), se.fit=T)
lines(newage, plogis(preds$fit), col="black", lwd=3)
lines(newage, plogis(preds$fit-1.96*preds$se.fit), col="red", lty=4, lwd=2)
lines(newage, plogis(preds$fit+1.96*preds$se.fit), col="blue", lty=4, lwd=2)
fmt <- glm(PedestrianAge ~ ObserverID, family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
fmt <- glm(PedestrianAge ~ ObserverID, family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
fmt <- glm(FPedestrianAge ~ ObserverID, family=binomial, data = OurDataFrame)
summary(fmt)
Anova(fmt)
install.packages("inputenc")
install.packages("knitr")
library(MASS)
data(trees)
head(trees)
attach(trees)
fml1 = lm(Volume ~ Girth)
summary(fml1)
anova(fml1)
fml2 = lm(Volume ~ Girth + I(Girth^2))
summary(fml2)
plot(Volume ~ Girth)
NewVol <- seq(min(Girth, na.rm=T), max(Girth, na.rm=T))
preds <- predict(fmt2, newdata=data.frame("Volume"=NewVol), se.fit=T)
lines(NewVol, preds$fit, col="black", lwd=3)
plot(Volume ~ Girth)
NewVol <- seq(min(Girth, na.rm=T), max(Girth, na.rm=T))
preds <- predict(fmt2, newdata=data.frame("Volume"=NewVol), se.fit=T)
lines(NewVol, preds$fit, col="black")
fmt1 = lm(Volume ~ Girth)
fmt2 = lm(Volume ~ Girth + I(Girth^2))
plot(Volume ~ Girth)
NewVol <- seq(min(Girth, na.rm=T), max(Girth, na.rm=T))
preds <- predict(fmt2, newdata=data.frame("Volume"=NewVol), se.fit=T)
lines(NewVol, preds$fit, col="black")
plot(Volume ~ Girth)
NewVol <- seq(min(Girth, na.rm=T), max(Girth, na.rm=T))
preds <- predict(fmt2, newdata=trees("Volume"=NewVol), se.fit=T)
lines(NewVol, preds$fit, col="black")
library(MASS)
data(trees)
head(trees)
attach(trees)
fmt1 = lm(Volume ~ Girth)
library(MASS)
data(trees)
head(trees)
attach(trees)
View(trees)
View(trees)
library(MASS)
data(trees)
head(trees)
attach(trees)
library(MASS)
data(trees)
head(trees)
attach(trees)
fmt1 = lm(Volume ~ Girth)
fmt2 = lm(Volume ~ Girth + I(Girth^2))
fmt3 = lm(Volume ~ I(Girth^2))
library(MASS)
data(trees)
head(trees)
attach(trees)
fmt1 = lm(Volume ~ Girth)
fmt2 = lm(Volume ~ Girth + I(Girth^2))
fmt3 = lm(Volume ~ I(Girth^2))
detatch(trees)
detach(trees)
library(MASS)
data(trees)
head(trees)
fmt1 = lm(Volume ~ Girth)
fmt2 = lm(Volume ~ Girth + I(Girth^2))
fmt3 = lm(Volume ~ I(Girth^2))
summary(fmt1)
plot(Volume ~ Girth)
NewVol <- seq(min(Girth, na.rm=T), max(Girth, na.rm=T))
preds <- predict(fmt2, newdata=trees("Volume"=NewVol), se.fit=T)
lines(NewVol, preds$fit, col="black")
preds <- predict(fmt2, newdata=data.frame("Volume"=NewVol), se.fit=T)
plot(Girth,Volume, col="blue")
lines(fmt2$fitted.values, col="red")
Girth2 = Girth^2
View(trees)
girthvalues = seq(0, 21, 0.1)
girthvalues = seq(0, 21, 0.1)
predictedcounts <- predict(fmt2,list(Girth=girthvalues, Time2=timevalues^2))
lines(timevalues, predictedcounts, col = "red", lwd = 3)
girthvalues = seq(0, 21, 0.1)
predictedvolume <- predict(fmt2, list(Girth=girthvalues, Girth2=girthvalues^2))
plot(Girth, Volume ,pch=16, xlab = “Girth (s)”, ylab = “Volume”, cex.lab = 1.3)
lines(girthvalues, predictedvolume, col = "red", lwd = 3)
Girth2 = Girth^2
fmt2 = lm(Volume ~ Girth + Girth2)
summary(fmt2)
anova(fmt2)
girthvalues = seq(0, 21, 0.1)
predictedvolume <- predict(fmt2, list(Girth=girthvalues, Girth2=girthvalues^2))
plot(Girth, Volume ,pch=16, xlab = “Girth (s)”, ylab = “Volume”, cex.lab = 1.3)
lines(girthvalues, predictedvolume, col = "red", lwd = 3)
girthvalues = seq(0, 21, 0.1)
predictedvolume <- predict(fmt2, list(Girth=girthvalues, Girth2=girthvalues^2))
plot(Girth, Volume, xlab = “Girth”, ylab = “Volume”)
lines(girthvalues, predictedvolume, col = "red", lwd = 3)
predictedvolume <- predict(fmt2, list(Girth=girthvalues, Girth2=girthvalues^2))
plot(Girth, Volume, xlab = “Girth”, ylab = “Volume”)
plot(Girth, Volume)
lines(girthvalues, predictedvolume, col = "red", lwd = 3)
girthvalues = seq(0, 21, 0.1)
predictedvolume <- predict(fmt2, list(Girth=girthvalues, Girth2=girthvalues^2))
plot(Girth, Volume)
lines(girthvalues, predictedvolume, col = "red", lwd = 2)
girthvalues = seq(0, 21, 0.1)
predictedvolume <- predict(fmt2, list(Girth=girthvalues, Girth2=girthvalues^2))
plot(Girth, Volume, color = "blue")
lines(girthvalues, predictedvolume, col = "red", lwd = 2)
girthvalues = seq(0, 21, 0.1)
predictedvolume <- predict(fmt2, list(Girth=girthvalues, Girth2=girthvalues^2))
plot(Girth, Volume, col = "blue")
lines(girthvalues, predictedvolume, col = "red", lwd = 2)
warnings()
girthvalues = seq(0, 21, 0.1)
predictedvolume <- predict(fmt2, list(Girth=girthvalues, Girth2=girthvalues^2))
plot(Girth, Volume, col="blue")
lines(girthvalues, predictedvolume, col="red", lwd = 2)
library(MASS)
data(trees)
head(trees)
fmt1 = lm(Volume ~ Girth)
summary(fmt1)
anova(fmt1)
plot(Girth,Volume, col="blue")
abline(fmt1, col="red")
Girth2 = Girth^2
fmt2 = lm(Volume ~ Girth + Girth2)
summary(fmt2)
anova(fmt2)
girthvalues = seq(0, 21, 0.1)
predictedvolume <- predict(fmt2, list(Girth=girthvalues, Girth2=girthvalues^2))
plot(Girth, Volume, col="blue")
lines(girthvalues, predictedvolume, col="red", lwd = 2)
library(MASS)
data(trees)
head(trees)
fmt1 = lm(Volume ~ Girth)
summary(fmt1)
anova(fmt1)
plot(Girth,Volume, col="blue")
abline(fmt1, col="red")
Girth2 = Girth^2
fmt2 = lm(Volume ~ Girth + Girth2)
summary(fmt2)
anova(fmt2)
girthvalues = seq(0, 21, 0.1)
predictedvolume <- predict(fmt2, list(Girth=girthvalues, Girth2=girthvalues^2))
plot(Girth, Volume, col="blue")
lines(girthvalues, predictedvolume, col="red")
library(MASS)
data(trees)
head(trees)
fmt1 = lm(Volume ~ Girth)
summary(fmt1)
anova(fmt1)
plot(Girth,Volume, pch=16)
abline(fmt1, col="red")
Girth2 = Girth^2
fmt2 = lm(Volume ~ Girth + Girth2)
summary(fmt2)
anova(fmt2)
girthvalues = seq(0, 21, 0.1)
predictedvolume <- predict(fmt2, list(Girth=girthvalues, Girth2=girthvalues^2))
plot(Girth, Volume, pch=16)
lines(girthvalues, predictedvolume, col="red")
plot(Girth,Volume, pch=12)
abline(fmt1, col="red")
plot(Girth,Volume, pch=13)
abline(fmt1, col="red")
plot(Girth,Volume, pch=14)
plot(Girth,Volume, pch=16)
plot(Girth,Volume, pch=16, cex.lab = 1.3)
abline(fmt1, col="red")
plot(Girth, Volume)
abline(fmt1, col="red")
fmt3 = lm(Volume ~ Girth + I(Girth^2))
summary(fmt3)
anova(fmt3)
plot(Girth, Volume)
lines(fmt3$fitted.values, type="l", lwd=2, lty=3, col="red")
\usepackage{cable}
\usepackage(cable)
usepackage(cable)
data(trees)
fmt1 = lm(Volume ~ Girth)
summary(fmt1)
anova(fmt1)
fmt1 = lm(Volume ~ Girth, data=trees)
summary(fmt1)
anova(fmt1)
Girth2 = (Girth^2, data=trees)
Girth2 =Girth^2, data=trees
Girth2 =Girth^2
fmt2 = lm(Volume ~ Girth + Girth2, envir = .GlobalEnv)
fmt2 = lm(Volume ~ Girth + Girth2, envir = GlobalEnv)
Girth2=Girth^2
fmt2 = lm(Volume ~ Girth + Girth2, data=GlobalEnv)
summary(fmt2)
anova(fmt2)
library(MASS)
data(trees)
Ourdataframe=trees
dataframe=trees
dataframe$Girth2 = dataframe$girth^2
dataframe$Girth2 = dataframe$Girth^2
fmt2 = lm(Volume ~ Girth + Girth2, data=dataframe)
summary(fmt2)
fmt1 = lm(Volume ~ Girth, data = dataframe)
plot(Girth, Volume, data = dataframe)
abline(fmt1, col="red")
fmt1 = lm(Volume ~ Girth, data=dataframe)
summary(fmt1)
anova(fmt1)
plot(Girth, Volume)
abline(fmt1, col="red")
library(MASS)
data(trees)
dataframe=trees
dataframe$Girth2 = dataframe$Girth^2
fmt1 = lm(Volume ~ Girth, data=dataframe)
summary(fmt1)
anova(fmt1)
plot(Girth, Volume)
abline(fmt1, col="red")
plot(Girth, Volume, data=dataframe)
View(dataframe)
fmt1 = lm(Volume ~ Girth, data = dataframe)
plot(Girth, Volume, data = dataframe)
abline(fmt1, col="red")
fmt1 = lm(Volume ~ Girth, data=dataframe)
summary(fmt1)
anova(fmt1)
plot(Girth, Volume, data=dataframe)
abline(fmt1, col="red")
library(MASS)
data(trees)
dataframe=trees
dataframe$Girth2 = dataframe$Girth^2
head(trees)
fmt1 = lm(Volume ~ Girth, data=dataframe)
summary(fmt1)
anova(fmt1)
plot(Girth, Volume, data=dataframe)
fmt1 = lm(Volume ~ Girth, data = dataframe)
summary(fmt1)
anova(fmt1)
plot(Girth, Volume, data = dataframe)
plot(Girth, Volume)
abline(fmt1, col="red")
fmt2 = lm(Volume ~ Girth + Girth2, data=dataframe)
summary(fmt2)
anova(fmt2)
girthvalues = seq(0, 21, 0.1)
predictedvolume <- predict(fmt2, list(Girth=girthvalues, Girth2=girthvalues^2))
plot(Girth, Volume, pch=16)
lines(girthvalues, predictedvolume, col="red")
View(dataframe)
fmt1 = lm(Volume ~ Girth)
summary(fmt1)
anova(fmt1)
plot(Girth, Volume)
abline(fmt1, col="red")
library(MASS)
data(trees)
head(trees)
# Simple linear regression model with ANOVA table and plot.
fmt1 = lm(Volume ~ Girth)
summary(fmt1)
anova(fmt1)
plot(Girth, Volume)
abline(fmt1, col="red")
library(metafor)
library(meta)
setwd("/Users/Torfinn/Documents/Uni Freiburg/Best Practice R/Meta-Analysis/R scripts")
table1 <- read.csv2("Gibson.csv")
=======
setwd("/Users/Torfinn/Documents/Uni Freiburg/Best Practice R/Meta-Analysis/Data")
table1 <- read.csv2("Gibson.csv")
str(table1)
summary(table1)
table1$d.mean=as.numeric(table1$d.mean)
table1$p.mean=as.numeric(table1$p.mean)
table1$p.sd=as.numeric(table1$p.sd)
table1$d.sd=as.numeric(table1$d.sd)
table1$hedges.g.=as.numeric(table1$hedges.g)
attach(table1)
birds=table1[taxon=="b",-c(5,6,7,8,9,10,11,12,13)]
detach(table1)
# To select randomly one row per study to narrow down the metaanalysis.
library(devtools)
source_gist("https://gist.github.com/mrdwab/6424112")
set.seed(100)
birdsnew = stratified(birds, "study.ID", 1)
summary(birdsnew)
attach(birdsnew)
#Fixed Effect Model
rma.FE = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")
rma.FE
#Random Effects Model
rma.RE = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")# maybe change vtype and method
rma.RE
detach(birdsnew)
forest.rma (rma.FE, annotate = TRUE, cex = 0.5, showweight = TRUE) #FE model
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
#Causes of heterogeneity - Meta-regression p. 141
attach(birdsnew)
rma.FE.meta = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB", mods = ~ continent)
rma.FE.meta
#Random Effects Model
rma.RE.meta = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB", mods = ~ continent)
rma.RE.meta
detach(birdsnew)
##publication bias testing
funnel(rma.FE)
regtest(rma.FE)#analysing the asymmetry of the funnel plot
funnel(rma.RE)
regtest(rma.RE, model = "rma", predictor = "sei")
#-- Fail safe n method
fsn(yi = rma.FE$yi, vi = rma.FE$vi)#"file drawer analysis"
fsn(yi = rma.RE$yi, vi = rma.RE$vi)
# -- Trim fill method
attach(birdsnew)
#Higgins 'E model
rma.TF <- rma(method="HE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n) # Risk Differences
trimfill(rma.TF) # Only applicable for FE or RE objects
funnel(trimfill(rma.TF))
#Fixed effects model
rma.TF.FE <- rma(method="FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n) # Risk Differences
trimfill(rma.TF.FE) # Only applicable for FE or RE objects
funnel(trimfill(rma.TF.FE))
detach(birdsnew)
#sensitivity analysis/robustness testing
#-- with the leaveout function
sens.RE = leave1out(rma.RE)
which(sens.RE$I2 == min(sens.RE$I2))
sum(sens.RE$I2 < 25)
hist(sens.RE$I2)
cbind(exp(sens.RE$estimate), sens.RE$pval < 0.05)
sens.RE$I2
table1 <- read.csv2("https://github.com/carow/Meta-Analysis/tree/master/Data/Gibson.csv")
str(rma.FE)
rma.TF.FE <- rma(method="HE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n) # Risk Differences
library(metafor)
#setwd("C:/Users/ICI/Desktop/MetaAnalysisD")
setwd("/Users/Torfinn/Documents/Uni Freiburg/Best Practice R/Meta-Analysis/Data")
table1 <- read.csv2("Gibson.csv")
str(table1)
summary(table1)
table1$d.mean=as.numeric(table1$d.mean)
table1$p.mean=as.numeric(table1$p.mean)
table1$p.sd=as.numeric(table1$p.sd)
table1$d.sd=as.numeric(table1$d.sd)
table1$hedges.g.=as.numeric(table1$hedges.g)
attach(table1)
birds=table1[taxon=="b",-c(5,6,7,8,9,10,11,12,13)]
detach(table1)
# To select randomly one row per study to narrow down the metaanalysis.
library(devtools)
source_gist("https://gist.github.com/mrdwab/6424112")
set.seed(100)
birdsnew = stratified(birds, "study.ID", 1)
summary(birdsnew)
attach(birdsnew)
#Fixed Effect Model
rma.FE = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")
rma.FE
#Random Effects Model
rma.RE = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")# maybe change vtype and method
rma.RE
detach(birdsnew)
forest.rma (rma.FE, annotate = TRUE, cex = 0.5, showweight = TRUE) #FE model
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
#Causes of heterogeneity - Meta-regression p. 141
attach(birdsnew)
rma.FE.meta = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB", mods = ~ continent)
rma.FE.meta
#Random Effects Model
rma.RE.meta = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB", mods = ~ continent)
rma.RE.meta
detach(birdsnew)
##publication bias testing
funnel(rma.FE)
regtest(rma.FE)#analysing the asymmetry of the funnel plot
funnel(rma.RE)
regtest(rma.RE, model = "rma", predictor = "sei")
#-- Fail safe n method
fsn(yi = rma.FE$yi, vi = rma.FE$vi)#"file drawer analysis"
fsn(yi = rma.RE$yi, vi = rma.RE$vi)
# -- Trim fill method
attach(birdsnew)
#Higgins 'E model
rma.TF <- rma(method="HE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n) # Risk Differences
trimfill(rma.TF) # Only applicable for FE or RE objects
funnel(trimfill(rma.TF))
#Fixed effects model
rma.TF.FE <- rma(method="FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n) # Risk Differences
trimfill(rma.TF.FE) # Only applicable for FE or RE objects
funnel(trimfill(rma.TF.FE))
detach(birdsnew)
#sensitivity analysis/robustness testing
#-- with the leaveout function
sens.RE = leave1out(rma.RE)
which(sens.RE$I2 == min(sens.RE$I2))
sum(sens.RE$I2 < 25)
hist(sens.RE$I2)
cbind(exp(sens.RE$estimate), sens.RE$pval < 0.05)
sens.RE$I2
radial(rma.RE)
radial(rma.RE)
bubble (rma.RE)
library(meta)
bubble (rma.RE)
labbe(rma.RE)
qqnorm(rma.RE)
baujat(rma.RE)
qqnorm(rma.RE, ylab = "Effectsize biodiversity difference")
qqnorm(rma.RE, ylab = "Effectsize biodiversity difference")
??meta
library(metafor)
#setwd("C:\Users\ICI\Documents\Carolina\Uni\Freiburg\3_Semester\Best practice R\Meta Analysis\R scripts")
table1 <- read.csv2("Gibson.csv")
str(table1)
summary(table1)
table1$d.mean=as.numeric(table1$d.mean)
table1$p.mean=as.numeric(table1$p.mean)
table1$p.sd=as.numeric(table1$p.sd)
table1$d.sd=as.numeric(table1$d.sd)
table1$hedges.g.=as.numeric(table1$hedges.g)
attach(table1)
birds=table1[taxon=="b",-c(5,6,7,8,9,10,11,12,13)]
detach(table1)
# To select randomly one row per study to narrow down the metaanalysis.
library(devtools)
source_gist("https://gist.github.com/mrdwab/6424112")
set.seed(100)
birdsnew = stratified(birds, "study.ID", 1)
summary(birdsnew)
attach(birdsnew)
#Fixed Effect Model
rma.FE = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")
#setwd("C:\Users\ICI\Documents\Carolina\Uni\Freiburg\3_Semester\Best practice R\Meta Analysis\R scripts")
table1 <- read.csv2("Gibson.csv")
str(table1)
summary(table1)
>>>>>>> FETCH_HEAD
table1$d.mean=as.numeric(table1$d.mean)
table1$p.mean=as.numeric(table1$p.mean)
table1$p.sd=as.numeric(table1$p.sd)
table1$d.sd=as.numeric(table1$d.sd)
table1$hedges.g.=as.numeric(table1$hedges.g)
attach(table1)
birds=table1[taxon=="b",-c(5,6,7,8,10,12,13)]
detach(table1)
attach(birds)
metacont.REML2 = metacont(n.e = d.n, mean.e = d.mean, sd.e = d.sd, n.c = p.n, mean.c = p.mean, sd.c = p.sd, sm = "MD")
metareg.REML2 = metareg(metacont.REML2, continent)
plot(metareg.REML2)
bubble(metareg.REML2)
bubble(metareg(metacont.REML2, continent))
bubble(metareg(metacont.REML2, continent, data = birds))
metareg.REML2 = metareg(metacont.REML2, continent, data = birds)
metareg.REML2 = metareg(metacont.REML2, continent, method = "HE")
bubble(metareg.REML2)
detach(birds)
detach(birds)
metacont.REML2 = metacont(n.e = d.n, mean.e = d.mean, sd.e = d.sd, n.c = p.n, mean.c = p.mean, sd.c = p.sd, data = birds, sm = "MD")
metacont.upd = update(metacont.REML2, byvar = continent, tau.common=TRUE, comb.fixed=FALSE)
bubble(metacont.upd)
bubble(metareg(metacont.upd))
metacont.upd0 = update(metacont.REML2, byvar = continent)
bubble(metareg(metacont.upd0))
par(mfrow=c(2,2))
bubble(metareg(metacont.upd0))
metacont.REML = metacont(n.e = d.n, mean.e = d.mean, sd.e = d.sd, n.c = p.n, mean.c = p.mean, sd.c = p.sd, method.tau = "REML", label.e = "Disturbed sites", label.c = "Primary forests", sm = "MD")
metacont.REML = metacont(n.e = d.n, mean.e = d.mean, sd.e = d.sd, n.c = p.n, mean.c = p.mean, sd.c = p.sd, method.tau = "REML", label.e = "Disturbed sites", label.c = "Primary forests", sm = "MD", data = birds)
metacont.upd = update(metacont.REML, byvar = continent)
par(mfrow=c(2,2))
bubble(metareg(metacont.upd))
par(mfrow=c(2,1))
bubble(metareg(metacont.upd))
par(mfrow=c(1,3))
bubble(metareg(metacont.upd))
library(devtools)
source_gist("https://gist.github.com/mrdwab/6424112")
set.seed(100)
birdsnew = stratified(birds, "study.ID", 1)
<<<<<<< HEAD
metacont.REML = metacont(n.e = d.n, mean.e = d.mean, sd.e = d.sd, n.c = p.n, mean.c = p.mean, sd.c = p.sd, method.tau = "REML", label.e = "Disturbed sites", label.c = "Primary forests", sm = "MD", data = birdsnew)
metacont.upd = update(metacont.REML, byvar = continent)
par(mfrow=c(1,3))
bubble(metareg(metacont.upd))
baujat(rma.RE)
View(birds)
View(table1)
=======
summary(birdsnew)
attach(birdsnew)
#Fixed Effect Model
rma.FE = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")
rma.FE
rma.RE = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")# maybe change vtype and method
rma.RE
detach(birdsnew)
forest.rma (rma.FE, annotate = TRUE, cex = 0.5, showweight = TRUE) #FE model
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
#Causes of heterogeneity - Meta-regression p. 141
attach(birdsnew)
detach(birdsnew)
rma.FE.meta = rma.FE rma, mods = ~ continent)
attach(birdsnew)
funnel(trimfill(rma.FE))
trimfill(rma.FE) # Only applicable for FE or RE objects
funnel(trimfill(rma.FE))
detach(birdsnew)
# -- Trim fill method
attach(birdsnew)
#Fixed effects model
trimfill(rma.FE) # Only applicable for FE or RE objects
funnel(trimfill(rma.FE))
#Higgins 'E model
rma.TF.RE <- rma.RE
trimfill(rma.TF.RE) # Only applicable for FE or RE objects
funnel(trimfill(rma.TF.RE))
rma.FE = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n)
rma.FE
trimfill(rma.FE) # Only applicable for FE or RE objects
funnel(trimfill(rma.FE))
library(metafor)
#setwd("C:\Users\ICI\Documents\Carolina\Uni\Freiburg\3_Semester\Best practice R\Meta Analysis\R scripts")
table1 <- read.csv2("Gibson.csv")
str(table1)
summary(table1)
table1$d.mean=as.numeric(table1$d.mean)
table1$p.mean=as.numeric(table1$p.mean)
table1$p.sd=as.numeric(table1$p.sd)
table1$d.sd=as.numeric(table1$d.sd)
table1$hedges.g.=as.numeric(table1$hedges.g)
>>>>>>> FETCH_HEAD
attach(table1)
birds=table1[taxon=="b",-c(6,7,8,10,12,13)]
detach(table1)
<<<<<<< HEAD
View(birds)
View(birds)
radial(rma.RE)
attach(birdsnew)
rma.RE = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")# maybe change vtype and method
detach(birdsnew)
radial(rma.RE)
radial(rma.RE)
qqnorm(rma.RE)
qqnorm(rma.RE)
qqnorm(rma.RE)
par(mfrow=c(1,1))
radial(rma.RE)
qqnorm(rma.RE)
baujat(rma.RE)
=======
# To select randomly one row per study to narrow down the metaanalysis.
library(devtools)
source_gist("https://gist.github.com/mrdwab/6424112")
set.seed(100)
data.sub = stratified(birds, "study.ID", 1)
summary(data.sub)
attach(data.sub)
#Fixed Effect Model
rma.FE = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n)
rma.FE
#Random Effects Model
rma.RE = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")# maybe change vtype and method
rma.RE
detach(data.sub)
# Automatisation should start here! Depending on size of dataset, change cex =
forest.rma (rma.FE, annotate = TRUE, cex = 0.5, showweight = TRUE) #FE model
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
forest.rma (rma.FE, cex = 0.5, showweight = TRUE) #FE model
forest.rma (rma.FE, cex = 0.5, showweight = TRUE) #FE model
op <- par(font=2)
text(-9, 15, "Study",    pos=4, cex=.8)
text( 5, 15, "Observed RR [95% CI]",  pos=2, cex=.8)
par(op)
op <- par(font=2)
text(-9, 15, "Study",    pos=4, cex=.8)
text( 5, 15, "Observed RR [95% CI]",  pos=1, cex=.8)
par(op)
library(metafor)
#setwd("C:\Users\ICI\Documents\Carolina\Uni\Freiburg\3_Semester\Best practice R\Meta Analysis\R scripts")
table1 <- read.csv2("Gibson.csv")
str(table1)
summary(table1)
table1$d.mean=as.numeric(table1$d.mean)
table1$p.mean=as.numeric(table1$p.mean)
table1$p.sd=as.numeric(table1$p.sd)
table1$d.sd=as.numeric(table1$d.sd)
table1$hedges.g.=as.numeric(table1$hedges.g)
attach(table1)
birds=table1[taxon=="b",-c(5,6,7,8,9,10,11,12,13)]
detach(table1)
# To select randomly one row per study to narrow down the metaanalysis.
library(devtools)
source_gist("https://gist.github.com/mrdwab/6424112")
set.seed(100)
data.sub = stratified(birds, "study.ID", 1)
summary(data.sub)
attach(data.sub)
#Random Effects Model
rma.RE.meta = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB", mods = ~ continent)
rma.RE.meta
str(rma.RE.meta)
ibrary(metafor)
#setwd("C:\Users\ICI\Documents\Carolina\Uni\Freiburg\3_Semester\Best practice R\Meta Analysis\R scripts")
table1 <- read.csv2("Gibson.csv")
str(table1)
summary(table1)
table1$d.mean=as.numeric(table1$d.mean)
table1$p.mean=as.numeric(table1$p.mean)
table1$p.sd=as.numeric(table1$p.sd)
table1$d.sd=as.numeric(table1$d.sd)
table1$hedges.g.=as.numeric(table1$hedges.g)
attach(table1)
birds=table1[taxon=="b",-c(5,6,7,8,9,10,11,12,13)]
detach(table1)
# To select randomly one row per study to narrow down the metaanalysis.
library(devtools)
source_gist("https://gist.github.com/mrdwab/6424112")
set.seed(100)
data.sub = stratified(birds, "study.ID", 1)
summary(data.sub)
attach(data.sub)
#Fixed Effect Model
rma.FE = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n)
rma.FE
#Random Effects Model
rma.RE = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")# maybe change vtype and method
rma.RE
#http://www.google.de/url?sa=t&rct=j&q=&esrc=s&source=web&cd=5&cad=rja&uact=8&ved=0CEIQFjAE&url=http%3A%2F%2Fwww.researchgate.net%2Fprofile%2FEdward_Purssell%2Fpublication%2F262923251_Meta-analysis_using_metafor_in_R%2Flinks%2F00b7d5395634a8cf6f000000&ei=RWxsVIutCI2tPIHBgZgM&usg=AFQjCNHp1LAEr_ZSwhc9v7Vou-6LdFBlmQ&bvm=bv.80120444,d.ZWU
#
detach(data.sub)
text( 12, 38, "Observed RR [95% CI]",  pos=1, cex=.8)
length(data.sub)
head(data.sub)
length(data.sub$row.ID)
text( 12, length(data.sub$row.ID)+5, "Observed RR [95% CI]",  pos=1, cex=.8)
text( 12, length(data.sub$row.ID)+10, "Observed RR [95% CI]",  pos=1, cex=.8)
forest.rma (rma.FE, cex = 0.5, showweight = TRUE) #FE model
?forest.rma
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE,
main="ggg") #RE model
?forest.rma
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE,
main="ggg",) #RE model
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
text( 12, length(data.sub$row.ID)+10, "Observed RR [95% CI]",  pos=1, cex=.8)
par(mar=c(1,1,1,1))
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE,
main="ggg",) #RE model
par(mar=c(2,2,2,2))
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE,
main="ggg",) #RE model
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
par(mfrow=c(2,2))
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE,
main="ggg",) #RE model
par(mfrow=c(1,1))
?par
par(oma=c(1,1,1,1))
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE,
main="ggg",) #RE model
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
par(oma=c(0,0,0,0))
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
par(mfrow=c(2,2))
pairs(mtcars)
par(mfrow=c(2,2))
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE,
main="ggg",) #RE model
with(mtcars,plot(mpg,wt))
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE,
main="ggg",) #RE model
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
par(mar=c(2,1,2,2))
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
?par
par(mar=c(5,4,4,2))
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
par(mar=c(5,4,2,2))
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
par(mar=c(5,2,2,2))
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
par(mar=c(5,3,2,2))
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
par(mar=c(5,4,4,2)) # back to default
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
text(locator(1), "Observed RR [95% CI]",  pos=1, cex=.8)
myfunct=function(x) {sqrt(x)}
myfunct(4)
rma.RE.meta = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB", mods = ~ continent)
rma.RE.meta
?meta
install.packages("meta")
library(meta)
?meta
#rma of random effects should be called rma.RE, rma of fixed effects should be
library(metafor)
#setwd("C:\Users\ICI\Documents\Carolina\Uni\Freiburg\3_Semester\Best practice R\Meta Analysis\R scripts")
table1 <- read.csv2("Gibson.csv")
str(table1)
summary(table1)
table1$d.mean=as.numeric(table1$d.mean)
table1$p.mean=as.numeric(table1$p.mean)
table1$p.sd=as.numeric(table1$p.sd)
table1$d.sd=as.numeric(table1$d.sd)
table1$hedges.g.=as.numeric(table1$hedges.g)
attach(table1)
birds=table1[taxon=="b",-c(5,6,7,8,9,10,11,12,13)]
detach(table1)
# To select randomly one row per study to narrow down the metaanalysis.
library(devtools)
source_gist("https://gist.github.com/mrdwab/6424112")
set.seed(100)
data.sub = stratified(birds, "study.ID", 1)
summary(data.sub)
attach(data.sub)
#Fixed Effect Model
rma.FE = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n)
rma.FE
#Random Effects Model
rma.RE = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")# maybe change vtype and method
rma.RE
detach(data.sub)
par(mar=c(5,3,2,2)) # for changing the size of the plot
#Forest plot for the FE model
forest.rma (rma.FE, cex = 0.5, showweight = TRUE)
#Forest plot for the RE model
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
par(mar=c(5,4,4,2)) # back to default
attach(data.sub)
rma.FE.meta = rma(yi = rma.FE$yi, vi = rma.FE$vi, mods = ~ data.sub$ ~continent )
rma.FE.meta = rma(yi = rma.FE$yi, vi = rma.FE$vi, mods = ~ continent )
rma.FE.meta
#Random Effects Model
rma.RE.meta = rma.RE, mods =  ~ data.sub$)
rma.RE.meta
rma.RE.meta = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB", mods = ~ continent)
rma.RE.meta
rma.FE.meta = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB", mods = ~ continent)
rma.FE.meta
#Random Effects Model
rma.RE.meta = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB", mods = ~ continent)
rma.RE.meta
detach(data.sub)
##publication bias testing
funnel(rma.FE)
regtest(rma.FE)#analysing the asymmetry of the funnel plot. Egger's test
funnel(rma.RE)
regtest(rma.RE, model = "rma", predictor = "sei")
#-- Fail safe n method
fsn(yi = rma.FE$yi, vi = rma.FE$vi) #"file drawer analysis"
fsn(yi = rma.RE$yi, vi = rma.RE$vi)
# -- Trim fill method
#Fixed effects model
trimfill(rma.FE) # Only applicable for FE or RE objects
funnel(trimfill(rma.FE))
#Higgins 'E model
rma.TF.RE <- rma.RE
trimfill(rma.TF.RE) # Only applicable for FE or RE objects
funnel(trimfill(rma.TF.RE))
rma.TF <- rma(method="HE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n) # Risk Differences
trimfill(rma.TF) # Only applicable for FE or RE objects
funnel(trimfill(rma.TF))
rma.TF.FE <- rma(method="FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n) # Risk Differences
trimfill(rma.TF.FE) # Only applicable for FE or RE objects
funnel(trimfill(rma.TF.FE))
#Higgins 'E model
rma.TF.RE <-  rma(method="HE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n) # Risk Differences
trimfill(rma.TF.RE) # Only applicable for FE or RE objects
funnel(trimfill(rma.TF.RE))
#sensitivity analysis/robustness testing
#-- with the leaveout function
sens.RE = leave1out(rma.RE)
which(sens.RE$I2 == min(sens.RE$I2))
sum(sens.RE$I2 < 25)
hist(sens.RE$I2)
cbind(exp(sens.RE$estimate), sens.RE$pval < 0.05)
sens.RE$I2
attach(data.sub)
rma.FE.meta = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB", mods = ~ continent)
rma.FE.meta
#Forest plot for the RE model
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
par(mar=c(5,4,4,2)) # back to default
rma.RE = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")# maybe change vtype and method
rma.RE
rma.RE.meta = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB", mods = ~ continent)
rma.RE.meta
\documentclass[11pt, a4paper]{article}
\author{Torfinn Belbo \& Carolina Wackerhagen}
library(metafor)
#setwd("C:\Users\ICI\Documents\Carolina\Uni\Freiburg\3_Semester\Best practice R\Meta Analysis\R scripts")
table1 <- read.csv2("Gibson.csv")
str(table1)
summary(table1)
table1$d.mean=as.numeric(table1$d.mean)
table1$p.mean=as.numeric(table1$p.mean)
table1$p.sd=as.numeric(table1$p.sd)
table1$d.sd=as.numeric(table1$d.sd)
table1$hedges.g.=as.numeric(table1$hedges.g)
attach(table1)
birds=table1[taxon=="b",-c(5,6,7,8,9,10,11,12,13)]
detach(table1)
# To select randomly one row per study to narrow down the metaanalysis.
library(devtools)
source_gist("https://gist.github.com/mrdwab/6424112")
set.seed(100)
data.sub = stratified(birds, "study.ID", 1)
summary(data.sub)
attach(data.sub)
# Our rma analysis
#Fixed Effect Model
rma.FE = rma(method = "FE", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n)
rma.FE
#Random Effects Model
rma.RE = rma(method = "REML", measure = "SMD", m1i = p.mean, m2i = d.mean, sd1i = p.sd, sd2i = d.sd, n1i = p.n, n2i = d.n, vtype = "UB")# maybe change vtype and method
rma.RE
detach(data.sub)
forest.rma(rma.RE, annotate = TRUE, cex = 0.5, showweight = TRUE) #RE model
opts_chunk$set(fig.path='', fig.align='center', fig.show='hold')
library(knitr)
# set global chunk options
opts_chunk$set(fig.path='', fig.align='center', fig.show='hold')
options(replace.assign=TRUE, width=90)
@
\title{Appendix}
View(data.sub)
\\
\bigskip
>>>>>>> FETCH_HEAD
